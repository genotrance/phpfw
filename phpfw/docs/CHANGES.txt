**********************
 Released version 0.4
**********************

============================
Sat Jun 23 15:26:01 CDT 2007
============================

Enhancements
------------
- Phpfw no longer forces the user to use a backend database. This can be
  done by turning off the [database] section in the configuration file.
- Modules can now identify whether the remote browser is on a mobile device
  with a smaller screen. The controller has a variable which can be accessed
  as follows: $this->controller->is_mobile_browser. This allows modules to
  generate a different output for devices with smaller screens.
- Login module now supports authentication against an ini file in addition
  to a database. This is achieved by modifying the [login] section.
- Added the Config module which provides a simple interface to read and write
  configuration files. Currently, it supports .ini files.
- Added the PelWrap module which provides a simple wrapper interface to the
  Pel library (http://pel.sf.net/).
  
============================
Fri Apr  6 15:35:50 UTC 2007
============================

Enhancements
------------
- Modules can now disable the automatic rendering of output in cases where
  finer control of output is required. Module::disable_render() and 
  Module::enable_render() control this setting.
- Modules can also disable wrapping the output with the default Phpfw header.
  This is useful if the module generates AJAX output that doesn't need the
  usual enclosing header information. This can be achieved with 
  Module::disable_view() and Module::enable_view().
- Table::get_table_rows_with_actions() now returns buttons instead of links
  for the view/edit/delete actions.
- Application object now stores the configuration file location specified in
  case it is needed later.
- Login::login_user() and Login::logout_user() now allow specifying the 
  module and action to execute after successfully returning.

Bug Fixes
---------
- Script files were being loaded in the reverse order of that specified in
  config.ini.

============================
Thu Jul 27 00:36:39 CDT 2006
============================

Bug Fixes
---------
- Fixed method Table::delete_link_table_row() where the primary key of the
  table was being hard coded to tablename_id. Table::delete_table_row_links()
  was also updated to call the former function using the specified primary
  key name.
- Fixed a bug in Form::check_time() where $date_str was being used instead
  of $time_str.
- Fixed a bug in Database::get_schema() where the table name array members
  were not being checked for validity before using them.
- Updated paths in phpdoc.ini.

============================
Tue Jun 27 13:10:20 CDT 2006
============================

Enhancements
------------
- Added module MailServer which is a nice wrapper of the PHP 'imap' module.
  The PHP 'imap' module supports IMAP, POP3 and NNTP servers.
- Automatically load database schema when database is empty. This is achieved
  by populating the schema section in the configuration file. Section 'schema'
  should contain load = true and path = the location of the schema files. The
  SQL file loaded from the above path is constructed based on the database type
  specified under section 'database'. For example:-
    For mysql, schema is loaded from - mysql_schema.sql
    For sqlite, schema is loaded from - sqlite_schema.sql
- Added error messages related to loading the database schema.
- Minor improvements for default initializing the Login module's members and
  to load the configuration a little smarter.

Bug Fixes
---------
- Fixed a bug in Database::check_schema() where it was assuming that there
  will always be tables in the database.
- Fixed a bug in isset_and_non_empty() where a value of 0 was being treated
  as empty.

============================
Fri May 26 15:53:10 CDT 2006
============================

Enhancements
------------
- Added Controller::encode_ajax_url() which creates an AJAXified URL out of
  the specified module and action. It uses Controller::encode_url() to create
  the actual URL and then generates a javascript link using the returned URL
  and the specified element ID. On clicking the link, the data returned is
  added into this HTML element.
- Added Form::ajax_element and Form::ajaxify() to allow forms to be executed
  using AJAX. The form POST is done using AJAX and the returned data is added
  into the specified element ID.
- Table::get_table_rows_with_actions() and Table::get_table_row_links_with_actions()
  now accept an additional optional parameter $ajax_element. View, update and
  delete links will send their output to this element using AJAX if string is
  specified. If array of strings then view will use [0], update[1] and delete[2].
- Phpfw now checks that 'time' fields follow the format of hh:mm. This is done
  in javascript as well as in PHP using the check_time() and Form::check_time()
  functions respectively.
- Added method Table::check_row_links() and Table::check_row_link() to check
  that a specific row of the given table has the specified number of links with
  the specified tables. Arguments include the row ID, table names and the
  condition to look for.
- Added Table::delete_table_row_links() to delete all links for a given row.
- Added Table::delete_table_row_and_links() to delete a specific table row and
  all links for that row.
- View::table_two_column_associative() now has an optional parameter $header to
  set the first row of the table as a header similar to View::table(). It is set
  to false by default.

Bug Fixes
---------
- Fixed a bug where an empty date value submitted was being caught as an error
  for an optional 'date' field.
- Fixed a bug where optional integer fields being left blank were causing an SQL
  error. This was because no value was being assigned to the field in the SQL
  query. This has been fixed by assigning NULL instead.


**********************
 Released version 0.3
**********************

============================
Wed May 24 16:11:17 CDT 2006
============================

Enhancements
------------
- Added Form::add_link() by which one can specify which link tables to
  populate when a form is processed. This way, two tables can be linked
  without having to create a form containing both the table fields. This can
  be achieved by adding the table to be populated to the form using
  Form::add_table() and then associating an existing row in a second table to
  the form using Form::add_link()
- Added an internal method Form::check_duplicate_table() which verifies that
  the same table is not added more than once, either using Form::add_table()
  or Form::add_link()
- Modified Table::get_table_rows_with_actions() to accept additional parameters
  to be passed into the view, update and delete links.
- Added Table::get_table_row_links_with_actions() to get all the link rows
  for a specific link table and return an array with the action links.
- Added an internal method Table::process_sql_options() to take an existing
  SQL option and adding a where clause to it.
- Phpfw now supports the 'time' field type. Currently, it allows the entry of
  five characters - hh:mm.

Bug Fixes
---------
- Fixed a bug in Database::check_schema() where link tables were not being
  processed correctly.

============================
Wed May 24 09:41:42 CDT 2006
============================

Enhancements
------------
- Added Login::$key_field to the customize the primary key field used in the
  Login module. Key for the current logged in user is saved in the $_SESSION
  variable as 'session_user_id'. This allows for storing and identifying data
  that belongs to a specific user.
- If a data table has a field named as the primary key of the Login table then
  phpfw maintains the field internally when the following conditions are met:
  the Login module is in use, the user is logged in. The added bonus is that
  Table::get* methods will filter the information by the current user ID. This
  way, data can be associated with specific users.

Bug Fixes
---------
- The Login module was not loading the custom table fields correctly from the
  configuration file. This has been fixed.

============================
Wed Apr  5 09:30:10 CDT 2006
============================

Enhancements
------------
- Added script/generate.php to generate a module file with basic list, view,
  add, update and delete functions. This is similar to Rails' 'generate' script
  that sets up scaffolding.
- Added CONTACT.txt.

============================
Mon Apr  3 21:28:40 CDT 2006
============================

Enhancements
------------
- Moved some of the templating library code in Module::render() to
  Module::get_templating_library_paths() so that Module::Smarty_render() and
  Module::PHPTAL_render() can be invoked directly from a module action. These
  two functions now expect a template file name as their input and return the
  resulting output as a string.

Bug Fixes
---------
- Fixed a bug with the date validation javascript function check_date() which
  was causing an infinite loop hang in IE.
- Fixed a bug with date field support where an mm-dd-yyyy formatted date was
  being saved to the database which was expecting a yyyy-mm-dd format.
- Date fields are now validated in PHP as well.
- Fixed a bug where date fields had a length of -1 hence the input box did not
  allow typing any values.

============================
Sat Apr  1 00:42:15 CST 2006
============================

Enhancements
------------
- Added functionality to skip using the templating library if it is enabled
  in the configuration file. The method Module::disable_template_library() can
  be invoked in the module's constructor to avoid using the templating library
  altogether, or in a module action to avoid using it only for that action.
  Method Module::enable_template_library() can be used in an action where the
  module disables templating altogether.
- Added Module::set_template_file() to set the template file to be used by the
  templating engine if enabled in the configuration file. This allows for a
  module action to use a template file other than the default file name of
  Modulename#action. Usage e.g. When multiple actions share the same template file.
- Login.php now calls Module::disable_template_library() in it's constructor
  so that it works when templating is enabled.


**********************
 Released version 0.2
**********************

============================
Mon Mar 27 23:20:12 CST 2006
============================

Enhancements
------------
- Modules can now register errors and SQL queries which can then be invoked
  using the Error::display_error() and the Sql::*_query() functions respectively.
  This is done with the Module::register_error() and Module::register_query()
  functions in the module's constructor.
- Similarly, module exceptions can be registered using Module::register_exception().
- Added Login::update_login() to update the user's login in the user table.
- Added Login::change_password() to update the user's password in the user table.

Bug Fixes
---------
- Fixed bug in Login.php where Login::check_login() was calling Login::login_user_form()
  instead of Login::login_user().
- Fixed bug in Module::exec_module_action() where the executed action was operating on
  a new instance of the executed module instead of the one instantiated by the controller.
  Issue only occurs under PHP 4.

============================
Mon Mar 27 00:24:00 CST 2006
============================

Enhancements
------------
- Added support for DATE columns. Form element is an input text box with javascript
  checking to ensure input is in mm-dd-yyyy format.

Bug Fixes
---------
- Fixed bug in Database::check_schema() where tables were being processed in a
  sequential order instead of first processing DATA tables and then LINK tables
  since LINK tables depend on DATA tables being identified.
- Fixed bug in Database::check_schema() where LINK table checking was hard coding
  primary key names.
- Fixed Email.php where header had an incorrect 'From' address format.


============================
Mon Mar 20 14:34:56 CST 2006
============================

Enhancements
------------
- Added method Table::get_table_rows_with_actions(). Method returns data obtained from
  Table::get_table_rows() and appends an additional 'Actions' field to provide 'view',
  'update' and 'delete' links.
- Moved application name and session lifetime configuration elements from index.php
  to config.ini. Changes to Application::Application() and
  Application::check_configuration_file() as needed.
- Added isset_and_non_empty() global function to check that variables loaded from the
  configuration file are set and are not empty strings. Used in phpfw.php and Login.php.

Bug Fixes
---------
- Fixed bug where if templating framework was left blank in config file then Phpfw
  complained that framework '' was invalid.
- Fixed bug where DATE_ADDED and DATE_UPDATED fields were not being ignored in the form
  processing function.
- Fixed a bug in Login.php where 'check_login()' was not loading the login configuration.
