[application]

; name
;   Name of the application. This is used to create a unique cookie for this application
; lifetime
;   Lifetime of the session. Recommended is 3600 seconds = 1 hour

name     = 
lifetime = 3600

[database]

; adodb
;   Location of the ADOdb or ADOdb Lite library which
;   Phpfw depends upon. Use quotes if using special 
;   characters like /. Trailing slash is not required.
;   NOTE: The ADOdb Lite library requires the pear module
;         to be enabled in adodb.config.php
;     e.g. adodb = "adodb_lite"
; type
;   Type of database. Refer to ADOdb or ADOdb Lite list of 
;   supported databases.
;   ADOdb: http://adodb.sf.net/
;   ADOdb Lite: http://adodblite.sf.net/
;     e.g. type = mysql
; host
;   Host name or IP of database server
;     e.g. host = localhost
; user
; pass
;   Database username and password to connect with
;     e.g. user = db_user, pass = db_pass
; name
;   Name of database to select
;     e.g. name = db_name

adodb = 
type  = 
host  = 
user  = 
pass  = 
name  = 

[module]

; A module is a user implemented class which contains a set of 
; methods or actions. All modules in the path variable below 
; are loaded by the application.
;
; path
;   Path to the module files. Use quotes if using special 
;   characters like /. Trailing slash is not required. 
;   Modules need to be located in a path other than the working 
;   directory.
;     e.g. path = "../module_path"
; default
;   The default module:action to execute when no module or action 
;   is specified.
;     e.g. default = User:login_user

path       = modules
default    = 

[include]

; List of files to include in the application separated by spaces. 
; The sql, error and script files are required. Form.js in the 
; script section is required if using the default form validation 
; function. Stylesheets are optional. Use quotes if using special 
; characters like /.
;   e.g. sql         = "sql.ini"
;   e.g. error       = "app2/error.ini"
;   e.g. scripts     = "ajax.js ../js/form.js"
;   e.g. stylesheets = style.css form.css

sql         = "ini/sql.ini"
error       = "ini/error.ini"
scripts     = "include/ajax.js include/form.js"
stylesheets = 

[template]

; Use a templating framework to generate the views for the application.
; If this is left empty then no framework is loaded.
;   Currently supported frameworks: Smarty, PHPTAL
;
; NOTE: Newer versions of PHPTAL require PHP5.
;
; framework
;   Specify the framework to use in this application. This is 
;   case sensitive.
;     e.g. framework = Smarty
; path
;   Location of the framework files. Use quotes if using special
;   characters like /. Trailing slash is not required.
;     e.g. path = "lib/smarty"
; template_dir
;   Directory where all the template files are located. This is 
;   preferably not accessible over the web. Use quotes if using
;   special characters like /. Trailing slash is not required.
;     e.g. template_dir = "../app_templates"
; compiled_dir
;   This is where the compiled template is located. Same rules
;   as the template_dir apply.
;     e.g. compiled_dir = compiled
; cache_dir			SMARTY SPECIFIC, OPTIONAL
;   This is the dir where Smarty caches the templates. Setting this
;   directory also enables caching in Smarty. Same rules as the 
;   template_dir apply.
;     e.g. cache_dir = "smarty/cache"
; config_dir		SMARTY SPECIFIC, OPTIONAL
;   This sets the config_dir for Smarty. This feature can be used
;   to store common variable values for the templates. Same rules
;   as the template_dir apply.
;     e.g. config_dir = "smarty/config"

framework    = 
path         = 
template_dir = 
compiled_dir = 

cache_dir    = 
config_dir   = 

[table_name]

; Names of tables with corresponding names to display on website
;   e.g. event = Event Details
;
; If a table name is not specified, it is displayed as just as it is.
;   e.g. event becomes Event

[table_key]

; Names of tables with corresponding names of primary key
;   e.g. event = eventid
;
; If a table name is not specified, default primary key is tablename_id
;   e.g. event becomes event_id

; [login]
;
; Uncomment if using a custom table for the Login module
;
; table
;   Name of the table in the database that contains login information
;   default: user
; key_field
;   Name of the field that contains the primary key
;   default: user_id
; user_field
;   Name of the field that contains the user name
;   default: email
; pass_field
;   Name of the field that contains the password. This field is
;   encrypted using the database's PASSWORD() function.
;   default: password
;
; table      = 
; key_field  = 
; user_field = 
; pass_field = 

